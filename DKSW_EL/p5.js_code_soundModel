// Copyright (c) 2019 ml5
//
// This software is released under the MIT License.
// https://opensource.org/licenses/MIT

/* ===
ml5 Example
Webcam Image Classification using a pre-trained customized model and p5.js
This example uses p5 preload function to create the classifier
=== */

const names = ['Background Noise', 'front roller', 'bavk sw', 'under rail', 'back pulley', 'motor pulley', 'cp'];

// Global variable to store the classifier
let classifier;

// Label (start by showing listening)
let label = "listening";
let confidence = 0;
let startMillis = 0.0;
let interval_start = 0.0;
let my_data = []

// Teachable Machine model URL:
let soundModelURL = 'https://teachablemachine.withgoogle.com/models/zF1vjy9Uj/model.json';


function preload() {
  // Load the model
  classifier = ml5.soundClassifier(soundModelURL);
}

function setup() {
  startMillis = millis();
  interval_start = startMillis;
  createCanvas(640, 480);
  // Start classifying
  // The sound model will continuously listen to the microphone
  classifier.classify(gotResult);
}

function draw() {
  background(0);
  // Draw the label in the canvas
  fill(255);
  textSize(32);
  // textAlign(CENTER, CENTER);
  textAlign(LEFT, TOP)
  // text(label, width / 3, height / 3);
  text(label, 5, 5);
  text(confidence, 5,50);
}


// The model recognizing a sound will trigger this event
function gotResult(error, results) {
  if (error) {
    console.error(error);
    return;
  }
  // The results are in an array ordered by confidence.
  // console.log(results[0]);
  label = results[0].label;
  confidence = results[0].confidence;
  
  // Get the current time
  // let thisTime = nf(hour(), 2) + ':' + nf(minute(), 2) + ':' + nf(second(), 2)
  let this_time = millis() - startMillis;
  let this_interval = millis() - interval_start;
  // console.log(millis()-startMillis);
  
  // console.log(results.length);
  for (const res of results) {
    let data_string = this_time.toString() + ",";
    data_string += res.label + ",";
    data_string += res.confidence.toString();
    my_data.push(encodeURI(data_string));
    
    // console.log(data_string);
  }
  
  console.log(this_interval);
  
  if (this_interval > 600000) {
    let csv = '';
    for (let row of my_data) {
      csv += row + '\n';
    }
    // let blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
    // saveStrings(encodeURI(csv), 'data.csv');
    // saveStrings(blob, 'data.csv');
    saveStrings(csv, 'data.csv');
    interval_start = millis();
  }
  
}
